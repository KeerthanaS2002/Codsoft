import tkinter as tk
from tkinter import messagebox, PhotoImage
import random

class RockPaperScissorsGame:
    def __init__(self, root):
        self.root=root
        self.root.title("Rock-Paper-Scissors Game")
        self.root.geometry("700x500")
        self.root.configure(bg="#ADD8E6")       
        self.user_score=0
        self.computer_score=0       
        self.create_widgets()

    def create_widgets(self):
        self.title_label=tk.Label(self.root,text="Rock-Paper-Scissors",font=("Arial",24,"bold"),bg="#ADD8E6")
        self.title_label.pack(pady=20)
        self.score_label=tk.Label(self.root,text="Scores - You: 0, Computer: 0",font=("Arial",14),bg="#ADD8E6")
        self.score_label.pack(pady=10)
        self.choices_frame=tk.Frame(self.root, bg="#ADD8E6")
        self.choices_frame.pack(pady=20)
        self.rock_button=tk.Button(self.choices_frame,text="Rock",width=15,height=2,font=("Arial",12,"bold"),
                                     command=lambda:self.play("rock"))
        self.rock_button.grid(row=0,column=0,padx=10)
        self.paper_button=tk.Button(self.choices_frame,text="Paper",width=15,height=2,font=("Arial",12,"bold"),
                                      command=lambda:self.play("paper"))
        self.paper_button.grid(row=0,column=1,padx=10)
        self.scissors_button = tk.Button(self.choices_frame,text="Scissors",width=15,height=2,font=("Arial",12,"bold"),
                                         command=lambda:self.play("scissors"))
        self.scissors_button.grid(row=0,column=2,padx=10)
        self.result_label=tk.Label(self.root, text="",font=("Arial",14),bg="#ADD8E6")
        self.result_label.pack(pady=10)
        self.play_again_button=tk.Button(self.root,text="Play Again",width=20,height=2,font=("Arial",12,"bold"),
                                           command=self.reset_game)
        self.play_again_button.pack(pady=10)
        self.play_again_button.config(state=tk.DISABLED)

    def get_computer_choice(self):
        return random.choice(['rock', 'paper', 'scissors'])

    def determine_winner(self, user_choice, computer_choice):
        if user_choice == computer_choice:
            return "It's a tie!"
        elif (user_choice == 'rock' and computer_choice == 'scissors') or \
             (user_choice == 'scissors' and computer_choice == 'paper') or \
             (user_choice == 'paper' and computer_choice == 'rock'):
            self.user_score += 1
            return "You win!"
        else:
            self.computer_score += 1
            return "You lose!"

    def play(self, user_choice):
        computer_choice=self.get_computer_choice()
        
        result=self.determine_winner(user_choice, computer_choice)
        
        self.result_label.config(text=f"You chose: {user_choice}\nComputer chose: {computer_choice}\n{result}")
        self.score_label.config(text=f"Scores - You: {self.user_score}, Computer: {self.computer_score}")
        
        self.rock_button.config(state=tk.DISABLED)
        self.paper_button.config(state=tk.DISABLED)
        self.scissors_button.config(state=tk.DISABLED)
        self.play_again_button.config(state=tk.NORMAL)

    def reset_game(self):
        self.result_label.config(text="")
        
        self.rock_button.config(state=tk.NORMAL)
        self.paper_button.config(state=tk.NORMAL)
        self.scissors_button.config(state=tk.NORMAL)
        self.play_again_button.config(state=tk.DISABLED)

if __name__ == "__main__":
    root=tk.Tk()
    game=RockPaperScissorsGame(root)
    root.mainloop()
